# Generated by Django 5.2.7 on 2025-10-19 05:04

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GrupoArticulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LineaArticulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='Stock Keeping Unit o Código de Artículo único', max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=200)),
                ('ultimo_costo', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_precios.grupoarticulo')),
                ('linea', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gestion_precios.lineaarticulo')),
            ],
        ),
        migrations.CreateModel(
            name='ListaPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('canal_venta', models.CharField(choices=[('TODOS', 'Todos los Canales'), ('ECOMMERCE', 'E-commerce'), ('TIENDA', 'Tienda Física')], default='TODOS', max_length=20)),
                ('fecha_inicio_vigencia', models.DateField()),
                ('fecha_fin_vigencia', models.DateField(blank=True, help_text='Si es nulo, no tiene fecha de fin.', null=True)),
                ('activa', models.BooleanField(default=True, help_text='Desmarcar para desactivar esta lista de precios.')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_precios.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='ReglaPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_regla', models.CharField(max_length=150)),
                ('tipo_regla', models.CharField(choices=[('PORCENTAJE', 'Porcentaje de Descuento'), ('MONTO_FIJO', 'Monto Fijo de Descuento')], max_length=20)),
                ('valor_regla', models.DecimalField(decimal_places=2, help_text='El valor del descuento (ej. 10 para 10% o 5 para S/ 5.00)', max_digits=10)),
                ('condicion', models.CharField(choices=[('CANTIDAD_MINIMA', 'Cantidad Mínima de Unidades'), ('MONTO_MINIMO', 'Monto Mínimo de Pedido')], max_length=20)),
                ('condicion_valor', models.DecimalField(decimal_places=2, help_text='Valor a comparar (ej. 3 para 3 unidades, 100 para S/ 100.00)', max_digits=10)),
                ('prioridad', models.IntegerField(default=10, help_text='Menor número se aplica primero.')),
                ('permite_venta_bajo_costo', models.BooleanField(default=False, help_text='Si se marca, esta regla puede hacer que el precio final sea inferior al costo del artículo.')),
                ('lista_precio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reglas', to='gestion_precios.listaprecio')),
            ],
            options={
                'ordering': ['prioridad'],
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sucursales', to='gestion_precios.empresa')),
            ],
            options={
                'unique_together': {('empresa', 'nombre')},
            },
        ),
        migrations.AddField(
            model_name='listaprecio',
            name='sucursal',
            field=models.ForeignKey(blank=True, help_text='Si es nulo, aplica a toda la empresa.', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion_precios.sucursal'),
        ),
        migrations.CreateModel(
            name='PrecioArticulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_base', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('articulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precios', to='gestion_precios.articulo')),
                ('lista_precio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precios', to='gestion_precios.listaprecio')),
            ],
            options={
                'unique_together': {('lista_precio', 'articulo')},
            },
        ),
    ]
